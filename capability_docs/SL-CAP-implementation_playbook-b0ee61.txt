=== SYSTEMS LTD CAPABILITY DOCUMENT ===
Capability: Managed Services & IT Infrastructure
=== METADATA ===
{
  "document_type": "implementation_playbook",
  "capability": "Managed Services & IT Infrastructure",
  "version": "3.2",
  "last_updated": "2024-11-08T18:53:50.909168",
  "author": "Fatima Khan (Practice Lead)",
  "review_status": "Needs Update"
}

=== CONTENT ===
## Systems Ltd. - Managed Services & IT Infrastructure Capability Playbook

**Version:** 1.3 (Last Updated: 2023-10-27)

**Purpose:** This playbook outlines the technical implementation procedures for Systems Ltd.'s Managed Services & IT Infrastructure capability. It is intended for internal use by our technical teams to en
**TODO: Add diagram here**
sure consistent and efficient service delivery.

---

### 1. Architecture Overview

Our Managed Services & IT Infrastructure capability is designed to provide comprehensive support for enterprise IT and cloud environments. The core components include:

*   **Client Onboarding & Assessment:** Initial discovery and analysis of client infrastructure.
*   **Managed Infrastructure:** Proactive monitoring, maintenance, and optimization of client servers, storag
<!-- Actual implementation differs for Cloud clients -->
e, and virtualized environments.
*   **Cloud Migration Services:** Planning, execution, and post-migration support for cloud adoption (AWS, Azure, GCP).
*   **Help Desk & End-User Support:** Tier 1-3 support for client end-users and IT staff.
*   **Network Services:** Design, implementation, and management of client networks, including WAN, LAN, and security.

**Key Technologies:**

*   **Cloud Providers:** AWS, Azure, GCP (Client-driven selection)
*   **Virtualization:** VMware vSphere, Microsoft Hyper-V
*   **Operating Systems:** Windows Server (various versions), Linux (RHEL, Ubuntu)
*   **Monitoring Tools:** Nagios, Zabbix, Datadog (client preference varies)
*   **Configuration Management:** Ansible, Chef (client preference varies)
*   **Networking:** Cisco, Juniper, Fortinet (client preference varies)

**Missing Components:**

*   Detailed diagrams of typical client network topologies.
*   Specific data flow diagrams for managed services.
*   Diagram illustrating the integration points between our internal tools and client environments.
*   Architecture for our internal ticketing system integration.

---

### 2. Setup Guide

This section provides a step-by-step guide for setting up and configuring our managed services for a new client.

**2.1. Client Onboarding & Initial Assessment**

1.  **Gather Client Information:** Collect details on existing infrastructure, applications, business objectives, and key stakeholders.
2.  **Perform Infrastructure Discovery:**
    *   Utilize [Discovery Tool Name] to scan client networks.
    *   **Environment-Specific Gotcha (Client A - Legacy Network):** For Client A's legacy network segment (192.168.1.0/24), ensure the discovery scanner is configured with the correct SNMP community string: `public_legacy_v1`. Failure to do so will result in incomplete asset inventory.
    *   Manually document any systems not discoverable by automated tools.
3.  **Document Existing SLAs:** Obtain and review current client-side SLAs.
4.  **Define Internal SLAs:** Establish internal service level agreements for the client based on the retainer agreement. *Internal SLAs vary significantly based on client tier and contract specifics. Refer to the client's Statement of Work (SOW) for precise targets.*

**2.2. Managed Infrastructure Setup**

1.  **Deploy Monitoring Agents:**
    *   For Windows Servers: Execute `install_agent.ps1 -ServerName <ClientServerName> -MonitorIP 10.10.5.20`.
    *   For Linux Servers: Run `sudo rpm -ivh nagios-nrpe-4.3.0-1.el7.x86_64.rpm` followed by `sudo systemctl enable nrpe` and `sudo systemctl start nrpe`.
    *   **Environment-Specific Gotcha (Client B - Isolated Network):** Client B's primary datacenter is on an isolated network (172.16.0.0/16). A dedicated jump host (`jump.clientb.local`) must be used for agent deployment. SSH into `jump.clientb.local` and then execute the agent installation commands.
2.  **Configure Monitoring Thresholds:**
    *   **Ask [Senior Network Engineer Name]** for the specific CPU and memory utilization thresholds for enterprise-grade servers. The default values are often too aggressive.
3.  **Set Up Alerting:** Configure email and SMS alerts for critical events.
    *   **Hardcoded Value Example:** For critical disk space alerts, set the threshold to `90%` for all client servers. This was the standard for the "Project Phoenix" implementation.

**2.3. Cloud Migration Setup**

1.  **Cloud Account Provisioning:**
    *   Create new AWS/Azure/GCP accounts as per client requirements.
    *   **Security Consideration:** Ensure IAM roles are created with the principle of least privilege. *This is often an afterthought, so double-check.*
2.  **Network Connectivity:**
    *   Establish VPN or Direct Connect/ExpressRoute connections.
    *   **Deprecated Approach:** While still functional, using site-to-site VPNs over the public internet is less secure and performant than dedicated connections. We still support this for legacy clients.
3.  **Data Migra
[CONFIGURATION: Environment-specific values not parameterized]
tion Strategy:**
    *   Define data transfer methods (e.g., AWS Snowball, Azure Data Box, rsync).
    *   **Ask [Cloud Architect Name]** for the optimal data migration strategy for large datasets (>10TB).

**2.4. Help Desk & Network Services Setup**

1.  **Ticketing System Integration:**
    *   Configure our internal ticketing system (e.g., Jira Service Management) to receive alerts from monitoring tools.
    *   **Hardcoded Value Example:** For incoming alerts from Nagios, the default project key is `SYSMS`.
2.  **Network Device Configuration:**
    *   Apply standard configurations to new network devices.
    *   **Ask [Network Operations Lead Name]** for the latest approved Cisco IOS configuration template.

---

### 3. Configuration Reference

This section provides examples of common configurations.

**3.1. Firewall Rule Example (FortiGate)**

```fortios
config firewall policy
    edit 100
        set 
<!-- Actual implementation differs for Cloud clients -->
srcintf "port1"
        set dstintf "port2"
        set srcaddr "all"
        set dstaddr "all"
        set action accept
        set schedule "always"
        set service "HTTP" "HTTPS"
        set utm-status enable
        set ssl-ssh-profile "certificate-inspection"
        set logtraffic all
    next
end
```

**3.2. Ansible Playbook Snippet (User Creation)**

```yaml
- name: Create user 'appuser'
  user:
    name: appuser
    shell: /bin/bash
    groups: sudo
    append: yes
```

**3.3. Cloud Provider Specific Configuration (AWS EC2)**

*   **Instance Type:** `t3.medium` (for general purpose workloads)
*   **AMI ID:** `ami-0abcdef1234567890` (Ubuntu 20.04 LTS - **Note:** This AMI ID is specific to our internal testing environment and will need to be replaced with the client's chosen AMI.)
*   **Security Group:** `sg-0123456789abcdef0` (Allow SSH from our management subnet `10.20.0.0/24`)

---

### 4. Troubleshooting

When encountering issues, follow these steps:

1.  **Contact Systems Ltd. Support:** Open a ticket via our internal portal or call the dedicated support line.
2.  **Check Monitoring Dashboards:** Review the status of affected systems and services.
3.  **Review Logs:** Examine system logs, application logs, and firewall logs for error messages.
    *   **Hardcoded Value Example:** For issues related to the Nagios monitoring server, check `/var/log/nagios/nagios.log`.
4.  **Restart Services:** Attempt to restart the affected service or application.
5.  **Reboot Systems:** As a last resort, reboot the affected server.
    *   **Deprecated Approach:** While rebooting can resolve transient issues, it's not a sustainable solution for recurring problems. Focus on root cause analysis.
6.  **Escalate to Specialist:** If the issue persists, escalate to the relevant specialist team (e.g., Network Operations, Cloud Engineering).
    *   **Ask [Senior Systems Administrator Name]** for guidance on complex performance-related issues.

---

### 5. Best Practices

Adhering to these best practices will ensure optimal service delivery.

*   **Regularly update client documentation.**
*   **Perform proactive maintenance during scheduled maintenance windows.**
*   **Implement robust security measures.**
*   **Automate repetitive tasks wherever possible.**

**Contradictions with Actual Implementations:**

*   While we advocate for automation, many routine tasks are still performed manually due to time constraints and the need for immediate client resolution.
*   Security hardening is often deprioritized when a client is under pressure to go live quickly.
*   Documentation updates are frequently delayed as teams focus on active client issues.

---

**Service Tax:**
**Contact Asif Akram (Solutions Architect) for production settings**
 Please remember to apply the appropriate service tax of approximately 15-16% to all billable hours and project costs.

**Disclaimer:** This playbook is a living document and may be updated without prior notice. Always refer to the latest version. Specific configurations and procedures may vary based on individual client environments and contractual agreements.