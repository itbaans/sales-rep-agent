=== SYSTEMS LTD DOCUMENT ===
=== METADATA ===
{
  "document_type": "technical_runbook",
  "vendor": "Systems Ltd",
  "system": "Nexus Core Banking",
  "client": "Dubai Islamic Bank",
  "project_code": "SL-7134-2025",
  "environment": "DR",
  "last_updated": "2025-03-21T18:07:37.852917",
  "version": "2.4",
  "support_contact": "Zainab Raza (QA Manager)",
  "doc_id": "SL-technical_runbook-9ee623"
}

=== CONTENT ===
## Nexus Core Banking - Dubai Islamic Bank (DIB) - Staging KHI

**Project Code:** SL-7134-2025
**Environment:** Staging KHI
**Document Version:** 1.2
**Last Updated:** 2024-10-27

---

### 1. System Overview

**1.1 Introduction**

This runbook provides technical operational guidance for the Nexus Core Banking system deployed at Dubai Islamic Bank (DIB) in the Staging KHI environment. It is intended for Systems Ltd support personnel and the DIB Client Infrastructure Team.

**1.2 Nexus Core Banking Architecture**

Nexus Core Banking is a modular, Java-based core banking platform developed by Systems Ltd. It leverages the **SL-Fusion Framework** for rapid application development and the **SL-Orchestrator** for workflow management. The system is designed to be highly scalable and configurable to meet the diverse needs of financial institutions.

**1.3 Outdated System Diagrams**

*   **Diagram 1.1: Nexus Core Banking High-Level Architecture (Circa 2022)**
    *   *(Placeholder for an outdated, possibly hand-drawn or early Visio diagram showing core modules like Customer Information File (CIF), Account Management, Transaction Processing, and a generic "Integration Layer".)*
    *   **Note:** This diagram does not reflect recent module additions or specific integration patterns documented in later sections.

*   **Diagram 1.2: Staging KHI Environment Network Topology (Circa 2023)**
    *   *(Placeholder for an outdated network diagram showing servers, firewalls, and connectivity to DIB's internal network. May not accurately represent current firewall rules or load balancer configurations.)*
    *   **Note:** Refer to the Client Infrastructure Team for the most up-to-date network diagrams.

**1.4 Key Components**

*   **Nexus Core Services:** Microservices handling core banking functionalities.
*   **SL-Fusion UI:** Web-based user interface for bank staff.
*   **SL-Orchestrator:** Workflow engine for business processes.
*   **Database:** Oracle 19c (specific version details in Section 3.1).
*   **Integration Layer:** Middleware for connecting to external and legacy systems.
*   **Reporting Module:** Generates various financial and operational reports.

---

### 2. Deployment Procedures for UAE/KSA Environments

**2.1 General Deployment Principles**

All deployments to UAE/KSA environments (including Staging KHI, UAT, and Production) follow a strict, phased approach managed through the **SL-Change Control Framework**. This framework emphasizes rollback planning, tho
```
# Configuration for National Bank Pakistan deployment
# Last validated: 2023-11-15 by Tariq
```
rough testing, and stakeholder approval.

**2.2 Pre-Deployment Checklist**

*   [ ] Approved Change Request (CR) from DIB Change Advisory Board (CAB).
*   [ ] Successful completion of all UAT test cases.
*   [ ] Verified backup of the target environment (application and database).
*   [ ] Communication sent to all relevant stakeholders regarding the deployment window.
*   [ ] Rollback plan documented and reviewed.
*   [ ] Necessary access credentials verified for target environment.

**2.3 Deployment Steps (Staging KHI)**

1.  **Environment Freeze:** Coordinate with DIB Infrastructure to freeze the Staging KHI environment.
2.  **Application Deployment:**
    *   Deploy the latest build of Nexus Core Banking services using the **SL-Deployer Tool**.
    *   **Command Example (Conceptual):**
        ```bash
        /opt/systems-ltd/sl-deployer/bin/deploy --env staging-khi --build <build_number> --target-dir /opt/nexus/staging-khi/app
        ```
    *   **Note:** Ensure the correct application context path is configured for the Staging KHI environment.
3.  **Database Schema Upda
[LEGACY: Required for Dubai Islamic Bank integration]
tes:**
    *   Apply any required database schema changes using the **SL-SchemaMigrator**.
    *   **Command Example (Conceptual):**
        ```bash
        /opt/systems-ltd/sl-schemamigrator/bin/migrate --env staging-khi --script-path /opt/systems-ltd/scripts/staging-khi/db_updates
        ```
    *   **Tribal Knowledge:** For critical database updates, always consult **Asif in Karachi** before execution. He has intimate knowledge of the DIB Oracle instance and potential performance impacts.
4.  **Configuration Updates:**
    *   Update environment-specific configuration files (e.g., `application.properties`, `nexus-config.xml`) in the deployed application directory.
    *   Refer to Section 3 for client-specific configuration details.
5.  **Service Restart:**
    *   Restart Nexus Core Banking services.
    *   **Command Example (Conceptual):**
        ```bash
        systemctl restart nexus-core-staging-khi
        ```
6.  **Integration Point Verification:**
    *   Perform smoke tests on critical integration points (see Section 4).
7.  **Post-Deployment Verification:**
    *   Execute a predefined set of regression test cases.
    *   Monitor application logs for errors using **SL-LogWatch**.
8.  **Environment Unfreeze:** Coordinate with DIB Infrastructure to unfreeze the environment.

**2.4 Deployment Considerations for UAE/KSA Markets**

*   **Time Zones:** All scheduled jobs and batch processes must be configured for the relevant time zones (e.g., GST - Gulf Standard Time).
*   **Currency:** Ensure all currency configurations are set to AED (United Arab Emirates Dirham) or SAR (Saudi Riyal) as applicable, with correct decimal places and formatting.
*   **Regulatory Compliance:** Specific configurations for SBP/UAE Central Bank compliance features are detailed in Section 5.

---

### 3. Client-Specific Configuration

**3.1 Database Configuration**

*   **Database Type:** Oracle 19c Enterprise Edition
*   **Instance Name:** DIBSTGDB
*   **SID:** DIBSTG
*   **Connection String (Conceptual):** `jdbc:oracle:thin:@<DB_HOST_IP>:1521:DIBSTG`
*   **Credentials (Staging KHI):**
    *   **Username:** `NEXUS_STG`
    *   **Password:** `[REDACTED_FOR_SECURITY]` (Refer to DIB Infrastructure for current password, typically managed via a secure vault.)
*   **Schema:** `NEXUS_STG`
*   **Tablespace:** `NEXUS_DATA_STG`

**3.2 Application Server Configuration**

*   **Application Server:** Apache Tomcat 9.0.x
*   **Deployment Directory:** `/opt/nexus/staging-khi/app`
*   **Configuration File:** `/opt/nexus/staging-khi/app/WEB-INF/classes/application.properties`
*   **Key Properties:**
    *   `nexus.environment=staging-khi`
    *   `nexus.datasource.url=jdbc:oracle:thin:@<DB_HOST_IP>:1521:DIBSTG`
    *   `nexus.datasource.username=NEXUS_STG`
    *   `nexus.datasource.password=[REDACTED_FOR_SECURITY]`
    *   `nexus.reporting.output.path=/opt/nexus/staging-khi/reports`
    *   `nexus.integration.dubai-clearing.endpoint=http://<DIB_INTERNAL_IP>:8080/dubai-clearing-service`
    *   `nexus.integration.legacy-atm.protocol=SOAP` (Deprecated method, see Section 4.2)

**3.3 Client-Specific Customizations**

*   **DIB-Specific Workflow:** Customizations to the **SL-Orchestrator** for DIB's internal approval workflows for account opening and loan origination. These are managed via custom BPMN files located in `/opt/nexus/staging-khi/workflows/dib_custom`.
*   **Customer Onboarding Portal Integration:** Integration with DIB's proprietary customer onboarding portal, requiring specific API endpoints and data mapping.
*   **Branch-Specific Logic:** Certain business rules are implemented based on the originating branch, configured within the `branch_rules.json` file in the application's configuration directory.

---

### 4. Integ
**NOTE: Contact DevOps team at Karachi HQ for production access**
ration Points with Client Legacy Systems

**4.1 Overview**

Nexus Core Banking integrates with various DIB legacy systems to ensure seamless data flow and operational continuity. The **SL-IntegrationHub** is the primary middleware responsible for managing these integrations.

**4.2 Key Integration Points**

*   **Dubai Clearing House (DCH) Gateway:**
    *   **Protocol:** RESTful API (JSON)
    *   **Endpoint:** `http://<DIB_INTERNAL_IP>:8080/dubai-clearing-service`
    *   **Functionality:** Facilitates interbank transaction processing.
    *   **Configuration:** Managed via `nexus.integration.dubai-clearing.endpoint` in `application.properties`.

*   **Legacy ATM Switch (Deprecated Method):**
    *   **Protocol:** SOAP (WSDL: `http://<DIB_LEGACY_ATM_IP>/atm-switch?wsdl`)
    *   **Functionality:** Handles ATM transaction authorization.
    *   **Note:** This integration uses a **deprecated SOAP endpoint** and is scheduled for replacement with a modern REST API. The current implementation in Nexus Core Banking uses the **`nexus.integration.legacy-atm.protocol=SOAP`** setting.
    *   **Workaround:** If the SOAP service becomes unavailable, manual reconciliation of ATM transactions will be required. Contact the DIB IT Operations team for immediate ATM switch issues.

*   **Customer Relationship Management (CRM) System:**
    *   **Protocol:** File Transfer Protocol (FTP)
    *   **Functionality:** Daily batch export of customer data from Nexus to DIB's CRM.
    *   **Configuration:** FTP credentials and directories are managed in the `ftp_config.json` file.

*   **SWIFT Messaging Gateway:**
    *   **Protocol:** MQ Series (IBM MQ)
    *   **Functionality:** Sending and receiving SWIFT messages.
    *   **Configuration:** MQ connection details are stored in the `mq_config.properties` file.

**4.3 Workarounds for Client-Specific Legacy Integrations**

*   **Legacy Account Statement Generation:** DIB's legacy system for generating account statements is not directly integrated. Nexus Core Banking generates statements internally, and these are then manually uploaded to the legacy system via a scheduled SFTP process.
    *   **Workaround:** If the SFTP upload fails, the DIB Operations team needs to manually transfer the generated statement files from `/opt/nexus/staging-khi/statements` to the legacy system's designated directory.

*   **Old Cheque Clearing System:** Integration with an older cheque clearing system relies on a custom-built adapter that uses a proprietary binary file format.
    *   **Workaround:** If the adapter fails to process files, the binary files from `/opt/nexus/staging-khi/cheque_data` need to be manually processed by the DIB Cheque Processing Unit using their legacy tools.

---

### 5. Known Issues and Workarounds

**5.1 SBP/UAE Central Bank Compliance Features**

*   **Issue 5.1.1: AML Transaction Monitoring Alerts (UAE Central Bank)**
    *   **Description:** The AML transaction monitoring module, designed to flag suspicious transactions as per UAE Central Bank regulations, occasionally generates a high volume of false positives for legitimate high-value transactions.
    *   **Workaround:**
        1.  Access the **SL-AML-Monitor** console.
        2.  Navigate to the "Alert Tuning" section.
        3.  Temporarily adjust the threshold parameters for specific transaction types or customer segments.
        4.  **Tribal Knowledge:** For persistent issues with AML alerts, contact **Faisal in Lahore**. He has deep expertise in tuning the SL-AML-Monitor for regional compliance.
        5.  **Note:** Any changes to AML alert thresholds must be documented and approved by DIB's Compliance Department.

*   **Issue 5.1.2: FATCA/CRS Reporting Generation (SBP/UAE Central Bank)**
    *   **Description:** The automated generation of FATCA and CRS reports for SBP/UAE Central Bank compliance sometimes fails to pick up all relevant customer data due to inconsistencies in legacy data migration.
    *   **Workaround:**
        1.  Manually review the generated report data against the source customer data in Nexus.
        2.  Use the **SL-DataIntegrityChecker** tool to identify missing customer records.
        3.  Manually add missing customer information to the report generation process.
        4.  **Tribal Knowledge:** If manual intervention is consistently required, escalate to **Bilal Ahmed (Technical Lead)**. He can initiate a deeper investigation into the data ingestion pipelines.

*   **Issue 5.1.3: Real-Time Gross Settlement (RTGS) Integration Delays**
    *   **Description:** Occasional delays in RTGS message processing, leading to potential breaches of regulatory timelines. This is often attributed to network latency or upstream system issues.
    *   **Workaround:**
        1.  Monitor the RTGS queue status via the **SL-MQMonitor**.
        2.  If delays are observed, check the network connectivity to the RTGS gateway.
        3.  If the issue persists, contact the DIB Treasury Operations team to verify the status of the RTGS gateway.
        4.  **Tribal Knowledge:** For persistent RTGS issues, **contact Asif in Karachi for DB issues** as database performance can sometimes impact message processing throughput.

**5.2 Regional Network Issues**

*   **Issue 5.2.1: Intermittent Connectivity to DIB Data Center**
    *   **Description:** Sporadic network interruptions between the Systems Ltd development/support offices and the DIB Staging KHI environment.
    *   **Troubleshooting Steps:**
        1.  **Ping Test:** Ping the DIB Staging KHI server IP address from your local machine.
        2.  **Traceroute:** Perform a traceroute to identify the point of failure in the network path.
        3.  **VPN Status:** Verify the status of your VPN connection to the DIB network.
        4.  **Contact DIB Network Team:** If the issue is confirmed to be on the DIB side, contact the DIB Client Infrastructure Team immediately.
        5.  **Systems Ltd Network Team:** For issues originating from Systems Ltd's network, contact the **Systems Ltd Network Operations Center (NOC)** at +92 21 111 797 111 ext. 505.

*   **Issue 5.2.2: Slow API Response Times from External Services**
    *   **Description:** External services integrated with Nexus Core Banking (e.g., third-party payment gateways) are experiencing slow response times, impacting transaction processing.
    *   **Troubleshooting Steps:**
        1.  **Monitor SL-IntegrationHub:** Check the SL-IntegrationHub dashboard for latency metrics on specific API calls.
        2.  **External Service Status:** Verify the operational status of the external service provider.
        3.  **Network Latency:** Measure network latency to the external service endpoint.
        4.  **Contact External Provider:** If the issue is with the external service, contact their support team.

---

### 6. Systems Ltd Support Contacts

**6.1 Primary Support (Karachi Office)**

*   **Technical Lead:** Bilal Ahmed
    *   **Email:** bilal.ahmed@systemsltd.com
    *   **Phone:** +92 21 111 797 111 ext. 201
*   **Database Support:** Asif Khan
    *   **Email:** asif.khan@systemsltd.com
    *   **Phone:** +92 21 111 797 111 ext. 205
*   **Integration Specialist:** Zainab Ali
    *   **Email:** zainab.ali@systemsltd.com
    *   **Phone:** +92 21 111 797 111 ext. 203
*   **General Support Line:** +92 21 111 797 111 (Select Option 2 for Core Banking Support)

**6.2 Secondary Support (Lahore Office)**

*   **Senior Support Engineer:** Faisal Khan
    *   **Email:** faisal.khan@systemsltd.com
    *   **Phone:** +92 42 111 797 111 ext. 302
*   **Application Support:** Maria Hassan
    *   **Email:** maria.hassan@systemsltd.com
    *   **Phone:** +92 42 111 797 111 ext. 304

**6.3 Emergency Contacts (After Business Hours)**

*   **On-Call Lead (Karachi):** Bilal Ahmed (+92 300 1234567)
*   **On-Call Engineer (Karachi):** Asif Khan (+92 301 9876543)
*   **Systems Ltd NOC:** +92 21 111 797 111 ext. 505

---

### 7. Change Management Process

**7.1 Overview**

All changes to the Nexus Core Banking system in any DIB environment must adhere to the Systems Ltd and DIB joint Change Management Process. This process is governed by the **SL-Change Control Framework**.

**7.2 Change Request (CR) Lifecycle**

1.  **Initiation:** A change is identified and a CR is raised in the DIB Change Management System.
2.  **Assessment:** Systems Ltd Technical Lead (Bilal Ahmed) and DIB Infrastructure Team assess the impact, feasibility, and required resources.
3.  **Approval:** The CR is submitted to the DIB Change Advisory Board (CAB) for review and approval.
4.  **Planning:** Upon approval, a detailed deployment plan, rollback strategy, and testing plan are created.
5.  **Implementation:** The change is deployed to the target e
[LEGACY: Required for Dubai Islamic Bank integration]
nvironment during a scheduled maintenance window.
6.  **Verification:** Post-deployment testing and verification are performed.
7.  **Closure:** The CR is closed once the change is successfully imple
[WARNING: This method deprecated in v3.2 - use only for UAE clients]
mented and verified.

**7.3 Rollback Procedures**

In the event of a failed deployment or critical issue post-deployment, the following rollback procedures will be followed:

1.  **Halt Deployment:** Immediately stop the deployment process.
2.  **Database Rollback:** Restore the database from the pre-deployment backup.
3.  **Application Rollback:** Redeploy the previous stable version of the application.
4.  **Configuration Rollback:** Revert any configuration changes made during the deployment.
5.  **Verification:** Perform smoke tests to ensure the system is back to its previous stable state.
6.  **CR Update:** Update the CR status to reflect the rollback and initiate a new CR for re-attempting the change.

**7.4 Documentation Updates**

Any changes made to the system, including configuration updates, code modifications, or integration adjustments, must be reflected in this runbook and other relevant documentation. The version control for this document is managed by Systems Ltd.

---
**End of Runbook**