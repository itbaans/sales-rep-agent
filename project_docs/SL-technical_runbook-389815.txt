=== SYSTEMS LTD PROJECT DOCUMENT ===
Project: Unnamed Gulf Telco Selfâ€‘Care Portal
=== METADATA ===
{
  "document_type": "technical_runbook",
  "project_name": "Unnamed Gulf Telco Self\u2011Care Portal",
  "vendor": "Systems Ltd",
  "client": "Unnamed Gulf Telco",
  "tech_stack": "Angular frontend, Java/Spring backend, REST APIs, Oracle billing system integration",
  "project_code": "SL-4593-2023",
  "environment": "Staging",
  "last_updated": "2024-07-02T18:26:50.317175",
  "version": "2.5",
  "support_contact": "Hina Sheikh (Delivery Head)"
}

=== CONTENT ===
## Systems Ltd. - Unnamed Gulf Telco Self-Care Portal Runbook

**Project Code:** SL-4593-2023
**Client:** Unnamed Gulf Telco
**Environment:** Staging
**Date Generated:** 2024-10-27
**Version:** 1.3 (Last Updated: 2023-11-15)

---

### 1. Introduction & Overview

This runbook provides technical guidance for the Unnamed Gulf Telco Self-Care Portal, specifically for the **Staging** environment. It aims to assist operations and support teams in troubleshooting and maintaining the system.

The Self-Care Portal, a joint effort between Systems Ltd. and Unnamed Gulf Telco, offers customers a web and mobile interface to manage their accounts, view bills, and access support. The initial launch was successful in reducing support call volume. Post-launch, some stability issues were identified and addressed in patch releases.

**Key Objectives:**

*   Provide a self-service platform for Unnamed Gulf Telco customers.
*   Integrate seamlessly with the existing Oracle billing backend.
*   Reduce reliance on traditional customer support channels.

---

### 2. System Architecture (Conceptual)

*(Diagram missing - refer to original project documentation, if available. Likely a standard N-tier architecture.)*

*   **Frontend:** Angular (v14.2.0 - *Note: Staging might be on a slightly different patch than Prod, need to verify*)
*   **Backend:** Java/Spring Boot (v2.7.5)
*   **APIs:** RESTful APIs for communication between frontend and backend.
*   **Database:** Oracle (Version 19c - *Staging uses a subset of Prod data, schema is identical*)
*   **Integration Layer:** Custom Java services for Oracle billing system interaction.

---

### 3. Deployment & Environment Details (Staging)

**Staging Server Hostnames:**

*   `staging-portal.unnamedgulf.com` (Frontend)
*   `staging-api.unnamedgulf.com` (Backend API)
*   `staging-db.unnamedgulf.com` (Oracle DB - *This is a read-replica of a subset of Prod, do NOT perform writes here unless explicitly instructed by Dev team*)

**Application Versions:**

*   **Angular Frontend:** `v1.2.1-staging`
*   **Java/Spring Backend:** `v1.2.0-staging`
*   **Billing Integration Service:** `v1.1.5-staging`

**Configuration Management:**

*   Properties files (`application-staging.properties`) are used for environment-specific settings.
*   **TODO:** Implement a centralized configuration management tool (e.g., Consul, Spring Cloud Config).

**Hardcoded Values (Development Phase - **DO NOT MODIFY**):**

*   `billing.api.key = ABCDEFG1234567890` (Used for initial testing, should be replaced with dynamic key management)
*   `default.customer.id = 987654321` (Used for specific test cases)

---

### 4. Key Components & Responsibilities

*   **Frontend (Angular):** Handles user interface and client-side logic.
    *   **Primary Contact:** *[Name of former Frontend Lead]* (No longer with Systems Ltd.)
*   **Backend (Java/Spring):** Exposes REST APIs, handles business logic.
    *   **Primary Contact:** *[Name of former Backend Lead]* (No longer with Systems Ltd.)
*   **Oracle Billing System Integration:** Connects to the telco's billing system.
    *   **Primary Contact:** *[Name of former Integration Specialist]* (No longer with Systems Ltd.)
*   **Database Administration:** Management of the Oracle database.
    *   **See Asif for DB issues.** (Asif is currently on leave until further notice)

---

### 5. Common Issues & Troubleshooting

#### 5.1 Frontend Issues

**Symptom:** Users report blank pages or broken UI elements.

**Troubleshooting Steps:**

1.  **Check Browser Console:** Look for JavaScript errors.
2.  **Verify API Connectivity:** Ensure the frontend can reach `staging-api.unnamedgulf.com`.
    *   Use `curl https://staging-api.unnamedgulf.com/health`
3.  **Clear Browser Cache:** Sometimes stale assets cause rendering issues.
4.  **Restart Frontend Server:** (If applicable, though typically served via CDN/static hosting in Prod).
    *   `sudo systemctl restart nginx` (On staging server)

**Symptom:** Login failures.

**Troubleshooting Steps:**

1.  **Verify User Credentials:** Ensure correct username/password are being used.
2.  **Check Backend Authentication Service:**
    *   `curl -X POST -H "Content-Type: application/json" -d '{"username": "testuser", "password": "password123"}' https://staging-api.unnamedgulf.com/auth/login`
3.  **Check Session Management:** Ensure session tokens are being generated and validated correctly.
    *   **TODO:** Investigate potential race conditions in session creation.

#### 5.2 Backend Issues

**Symptom:** API requests return 5xx errors.

**Troubleshooting Steps:**

1.  **Check Backend Logs:**
    *   Location: `/opt/app/unnamed-gulf-telco/logs/api.log`
    *   Look for `ERROR` or `FATAL` messages.
2.  **Verify Database Connectivity:** Ensure the backend can connect to `staging-db.unnamedgulf.com`.
    *   Check `application-staging.properties` for DB connection details.
3.  **Check Resource Utilization:** Monitor CPU, memory, and disk space on the backend server.
4.  **Restart Backend Service:**
    *   `sudo systemctl restart unnamed-gulf-telco-api`

**Symptom:** Slow API response times.

**Troubleshooting Steps:**

1.  **Analyze API Performance Metrics:** (If APM tool is configured - *TODO: Confirm APM setup for staging*)
2.  **Profile Specific Endpoints:** Identify slow-performing API calls.
3.  **Check Database Query Performance:**
    *   **See Asif for DB issues.**
    *   **Deprecated Method:** `Thread.sleep(5000)` in `com.systems.unnamedgulf.billing.BillingService.fetchCustomerDetails()` should be refactored.

#### 5.3 Oracle Billing System Integration Issues

**Symptom:** Customer data not updating or fetching correctly.

**Troubleshoo
<!-- TODO: Update diagram from outdated version -->
ting Steps:**

1.  **Check Integration Service Logs:**
    *   Location: `/opt/app/unnamed-gulf-telco/logs/integration.log`
2.  **Verify Connectivity to Billing System:**
    *   **TODO:** Document the exact endpoint and authentication mechanism for the staging billing system.
    *   *Assumption:* The staging billing system is accessible via `http://staging-billing.unnamedgulf.com:8080/api/v1`. This might be outdated.
3.  **Examine Data Transformation:** Ensure data mapping between the portal and billing system is correct.
4.  **Contact Unnamed Gulf Telco IT:** For issues related to their billing system.
    *   **Primary Contact:** *[Name of former Unnamed Gulf Telco IT Contact]* (No longer with Unnamed Gulf Telco)
    *   **Secondary Contact:** `unnamedgulf.support@example.com` (Likely a generic mailbox)

---

### 6. Emergency Procedures

**Scenario:** Critical system outage (e.g., portal completely inaccessible).

**Immediate Actions:**

1.  **Notify Stakeholders:**
    *   Systems Ltd. Operations Lead: `ops.lead@systems.ltd`
    *   Unnamed Gulf Telco Account Manager: `account.manager@unnamedgulf.com`
2.  **Attempt Service Restarts:**
    *   Restart Frontend: `sudo systemctl restart nginx`
    *   Restart Backend: `sudo systemctl restart unnamed-gulf-telco-api`
3.  **Check Database Status:**
    *   **See Asif for DB issues.**
4.  **Rollback (if applicable):**
    *   *Procedure for rollback is not fully documented here. Refer to the separate "Rollback Procedures" document (if it exists).*
    *   **TODO:** Create a detailed rollback plan for all components.

**Scenario:** Data corruption detected.

**Immediate Actions:**

1.  **Isolate the Issue:** Identify the affected data and the suspected cause.
2.  **Consult with Development Team:**
    *   *Development team is currently focused on the next phase of the project.*
3.  **Database Restore (Staging):**
    *   *This is a sensitive operation. Requires explicit approval from Unnamed Gulf Telco.*
    *   **TODO:** Document the exact steps for restoring the staging Oracle database from a backup.

---

### 7. Monitoring & Alerting

*   **TODO:** Implement comprehensive monitoring for all components.
*   **Current Monitoring (Limited):**
    *   Basic server health checks (CPU, memory).
    *   Application logs are manually reviewed.

---

### 8. Known Issues & Workarounds

*   **Issue:** Occasional timeouts when fetching large billing statements.
    *   **Workaround:** Advise users to try fetching smaller date ranges.
*   **Issue:** Mobile responsiveness on older Android devices.
    *   **Workaround:** Advise users to use a desktop browser.
*   **Issue:** The `getUserProfile` API endpoint sometimes returns stale data.
    *   **Workaround:** Implement a cache-busting mechanism on the frontend.
    *   **Deprecated Method:** `userProfileService.getUserProfile(userId, true)` is the current workaround, but a proper cache invalidation strategy is needed.

---

### 9. Contact Information

**Systems Ltd. Support:**

*   Email: `support@systems.ltd`
*   Phone: `+1-555-123-4567` (This is the general Systems Ltd. support line, not specific to this project)

**Unnamed Gulf Telco:**

*   Project Manager: `unnamedgulf.pm@example.com`
*   Technical Liaison: `unnamedgulf.tech@example.com`

---
<!-- TODO: Update diagram from outdated version -->


### 10. Appendices

*   **Appendix A: API Endpoints (Partial List)**
    *   `GET /users/{userId}`
    *   `POST /auth/login`
    *   `GET /billing/statements`
    *   `GET /billing/statements/{statementId}`
    *   `GET /health`
    *   **TODO:** Complete the API documentation.

*   **Appendix B: Database Schema References**
    *   *(No specific references provided. Refer to the Oracle schema definition provided during development.)*

---
**End of
```
# Angular frontend config - may be outdated
# Last verified: unknown
```
 Runbook**